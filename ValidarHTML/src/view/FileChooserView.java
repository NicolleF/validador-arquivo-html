/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import java.awt.Component;
import java.awt.Container;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JTextField;

/**
 *
 * @author Nicolle
 */
public class FileChooserView extends javax.swing.JFrame {

    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(FileChooserView.class.getName());
    private static FileChooserView fileChooserView;

    /**
     * Creates new form FileChooserView
     */
    public FileChooserView() {
        initComponents();

        jFileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        jFileChooser.setFileFilter(new javax.swing.filechooser.FileNameExtensionFilter("Arquivos HTML e TXT", "html", "txt"));
        jFileChooser.setAcceptAllFileFilterUsed(false);
        
        disableTextField(jFileChooser);
        
        jFileChooser.addActionListener(e -> {
            if (JFileChooser.APPROVE_SELECTION.equals(e.getActionCommand())) {
                File selectedFile = jFileChooser.getSelectedFile();
                ValidateHtmlView.getValidarHtmlView().updateLabelFilePath(selectedFile.toString(), true);
                dispose();
            } else if (JFileChooser.CANCEL_SELECTION.equals(e.getActionCommand())) {
                dispose();
            }
        });
    }
    
    private void disableTextField(Component component) {
        if (component instanceof JTextField) {
            ((JTextField) component).setEditable(false);
            ((JTextField) component).setFocusable(false);
        } else if (component instanceof Container) {
            for (Component child : ((Container) component).getComponents()) {
                disableTextField(child);
            }
        }
    }

    public static FileChooserView getFileChooserView() {
        if (fileChooserView == null) {
            fileChooserView = new FileChooserView();;
        }

        return fileChooserView;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser = new javax.swing.JFileChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jFileChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jFileChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser jFileChooser;
    // End of variables declaration//GEN-END:variables
}
